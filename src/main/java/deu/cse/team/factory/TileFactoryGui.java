/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.cse.team.factory;

import deu.cse.team.command.PayGui;
import deu.cse.team.mainmenu.UserMainMenu;
import deu.cse.team.observer.Notice;
import deu.cse.team.source.EstimateInfo;
import deu.cse.team.source.FileMgmt;
import deu.cse.team.source.HousingTypeInfo;
import deu.cse.team.source.TileInfo;
import deu.cse.team.strategy.HousingTypeGui;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author User
 */
public class TileFactoryGui extends javax.swing.JFrame {

    /**
     * Creates new form TileFactoryGui
     */
    String num;
    public TileFactoryGui() {
        initComponents();
        setLocationRelativeTo(this);
        setTitle("TileFactory Select");
    }
    
    public TileFactoryGui(String num) {
        initComponents();
        setLocationRelativeTo(this);
        setTitle("TileFactory Select");
        this.num = num;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        JLabel1 = new javax.swing.JLabel();
        JLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("확인");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--선택--", "나무", "석재", "대리석" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--선택--", "모던한", "시원한", "따듯한" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        JLabel1.setText("재질");

        JLabel2.setText("느낌");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("수량(1묶음 100장)");

        jTextField1.setColumns(3);
        jTextField1.setToolTipText("");

        jButton2.setText("취소");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("선택");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jSeparator1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel3)
                                .addGap(36, 36, 36)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(JLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(JLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLabel1)
                    .addComponent(JLabel2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        String textureType = jComboBox1.getSelectedItem().toString();
        String moodType = jComboBox2.getSelectedItem().toString();
        String amount = jTextField1.getText();
        boolean isNumeric =  amount.matches("[+-]?\\d*(\\.\\d+)?");
        
        if("--선택--".equals(moodType) || "--선택--".equals(textureType)) {            
            showMessageDialog(null,"모든 항목을 선택해주세요.");
        }
        else if (!isNumeric){
            showMessageDialog(null,"수량에 숫자만 입력해주세요.");
        }
        else if ("모던한".equals(moodType)) {
            TileStore modernStore = new ModernTileStore();
            Tile tile = modernStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();
            
            String str = String.format("%s\t%s\t%s\t%s\t%s\t%s\t%s", num, moodType, textureType, color, shape, design, amount);
            
            ArrayList<TileInfo> tileInfo = new ArrayList<>();
            
            FileMgmt fileMgmt = new FileMgmt();
            try {
                fileMgmt.writeFileData("C:\\DB\\TileList.txt", str);
            } catch (IOException ex) {
                Logger.getLogger(TileFactoryGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            PayGui payGui = new PayGui(num);
            payGui.setVisible(true);     
            dispose();
            
        }
        
        else if ("시원한".equals(moodType)) {
            TileStore coolStore = new CoolTileStore();
            Tile tile = coolStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();
            
             String str = String.format("%s\t%s\t%s\t%s\t%s\t%s\t%s", num, moodType, textureType, color, shape, design, amount);
            
            ArrayList<TileInfo> tileInfo = new ArrayList<>();
            
            FileMgmt fileMgmt = new FileMgmt();
            try {
                fileMgmt.writeFileData("C:\\DB\\TileList.txt", str);
            } catch (IOException ex) {
                Logger.getLogger(TileFactoryGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            PayGui payGui = new PayGui(num);
            payGui.setVisible(true);     
            dispose();

        }
        
        else if ("따듯한".equals(moodType)) {
            TileStore warmStore = new WarmTileStore();
            Tile tile = warmStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();
            
            String str = String.format("%s\t%s\t%s\t%s\t%s\t%s\t%s", num, moodType, textureType, color, shape, design, amount);
            
            ArrayList<TileInfo> tileInfo = new ArrayList<>();
            
            FileMgmt fileMgmt = new FileMgmt();
            try {
                fileMgmt.writeFileData("C:\\DB\\TileList.txt", str);
            } catch (IOException ex) {
                Logger.getLogger(TileFactoryGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            PayGui payGui = new PayGui(num);
            payGui.setVisible(true);     
            dispose();

        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        
        
        //Estimate 삭제
        FileMgmt fileMgmt = new FileMgmt();
        ArrayList<EstimateInfo> estimateInfo = new ArrayList<>();
        fileMgmt.readEstimateFileData("C:\\DB\\EstimateList.txt");
        fileMgmt.splitEstimateFileData();
        try {   
            PrintWriter pw = new PrintWriter("C:\\DB\\EstimateList.txt");
            estimateInfo = fileMgmt.returnEstimateInfo();
            String data;
            for (int i = 0; i < estimateInfo.size(); i++) {
                if(!num.equals(estimateInfo.get(i).getNum())){
                data = String.format("%s\t%s", estimateInfo.get(i).getId(), estimateInfo.get(i).getNum());
                pw.println(data);
            }
        }
        pw.close();
        } 
        catch (IOException ex) {
           Logger.getLogger(UserMainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //HousingType 삭제
        ArrayList<HousingTypeInfo> housingTypeInfo = new ArrayList<>();
        fileMgmt.readHousingTypeFileData("C:\\DB\\HousingTypeList.txt");
        fileMgmt.splitHousingTypeFileData();
        try {   
            PrintWriter pw = new PrintWriter("C:\\DB\\HousingTypeList.txt");
            housingTypeInfo = fileMgmt.returnHousingTypeInfo();
            String data;
            for (int i = 0; i < housingTypeInfo.size(); i++) {
                if(!num.equals(housingTypeInfo.get(i).getNum())){
                    data = String.format("%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s", 
                            housingTypeInfo.get(i).getNum(), 
                            housingTypeInfo.get(i).getHousingtype(),
                            housingTypeInfo.get(i).getCeilingtype(),
                            housingTypeInfo.get(i).getFloortype(),
                            housingTypeInfo.get(i).getWalltype(),
                            housingTypeInfo.get(i).getWindowtype(),
                            housingTypeInfo.get(i).getHeight(),
                            housingTypeInfo.get(i).getAflatnumber());
                pw.println(data);
            }
        }
        pw.close();
        } 
        catch (IOException ex) {
           Logger.getLogger(HousingTypeGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //paint 삭제
        /*ArrayList<EstimateInfo> estimateInfo = new ArrayList<>();
        fileMgmt.readEstimateFileData("C:\\DB\\EstimateList.txt");
        fileMgmt.splitEstimateFileData();
        try {   
            PrintWriter pw = new PrintWriter("C:\\DB\\EstimateList.txt");
            estimateInfo = fileMgmt.returnEstimateInfo();
            String data;
            for (int i = 0; i < estimateInfo.size(); i++) {
                if(!num.equals(estimateInfo.get(i).getNum())){
                data = String.format("%s\t%s", estimateInfo.get(i).getId(), estimateInfo.get(i).getNum());
                pw.println(data);
            }
        }
        pw.close();
        } 
        catch (IOException ex) {
           Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
        
        dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String textureType = jComboBox1.getSelectedItem().toString();
        String moodType = jComboBox2.getSelectedItem().toString(); //검색 분류 추출
        
        if("--선택--".equals(moodType) || "--선택--".equals(textureType)) {            
            jTextArea1.setText("모든 항목을 선택해주세요.");
        }
        
        else if ("모던한".equals(moodType)) {
            TileStore modernStore = new ModernTileStore();
            Tile tile = modernStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();

            jTextArea1.setText(String.format("재질: %s\n색상: %s\n모양: %s\n디자인: %s", texture, color, shape, design ));
            
        }
        
        else if ("시원한".equals(moodType)) {
            TileStore coolStore = new CoolTileStore();
            Tile tile = coolStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();

            jTextArea1.setText(String.format("재질: %s\n색상: %s\n모양: %s\n디자인: %s", texture, color, shape, design ));
        }
        
        else if ("따듯한".equals(moodType)) {
            TileStore warmStore = new WarmTileStore();
            Tile tile = warmStore.orderTile(textureType);
            
            String texture = tile.getTexture();
            String color = tile.color.toString();
            String shape = tile.shape.toString();
            String design = tile.design.toString();

            jTextArea1.setText(String.format("재질: %s\n색상: %s\n모양: %s\n디자인: %s", texture, color, shape, design ));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TileFactoryGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TileFactoryGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TileFactoryGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TileFactoryGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TileFactoryGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JLabel JLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
